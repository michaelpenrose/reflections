When would you want to use a remote repository rather than keeping all your work
local?

    To share work with others to contribute
    To share work with others to view
    To back up work
    To enable working from different computers

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    There might be conflicting changes I am working on locally that aren't complete
    Someone else might make an update that I don't want e.g. because it isn't ready

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A branch exists locally to work on a bug fix or new feature without effecting the master branch
    A clone copies a repository, it can be done locally or on github. It doesn't give credit to the original source by default.
    A fork is done on GitHub, it does give credit to the original source. The fork can then be cloned to the local machine.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    If you are not online you can still use Git status to see if the local branch is aligned with the last known state of the remote
    You can work on resolving conflicts between local and remote even if you are not online
    You can resolve conflicts before they are pushed back to GitHub

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without using Git or GitHub I could collaborate quicker with others who don't use them as the learning time for them would be removed.
    It would be harder to track branches, to navigate and revert to previous versions, to merge changes, to resolve conflicts, to know who had done what. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Making changes in a branch gives an extra layer of protection to the master by making it one extra step removed from any bugs that might be introduced.
    Making changes in a branch also allows different people to work on different areas of functionality with a little more independence of each other's work.
    If everyone was working on the master branch then conflicts might have to be resolved at unexpected or inconvienient times.
    Making changes directly in the master is not advisable generally but it can speed up the add-commit-push-merge process. 
